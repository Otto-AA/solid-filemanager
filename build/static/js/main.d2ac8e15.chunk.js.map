{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","Reducers/MainReducer.js","serviceWorker.js","config.js","Api/folderUtils.js","Api/Api.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/CreateFileAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLogoutAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/ZipAction.jsx","Components/ContextMenu/ContextMenuActions/ExtractAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenuActions/OpenInNewTabAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/SolidLogout/SolidLogout.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/CreateFile/CreateFile.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","defaultState","path","pathSublist","host","isLoggedIn","webId","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogSolidLogout","visibleDialogCreateFolder","visibleDialogCreateFile","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","getHost","setHost","newHost","slice","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","folderType","fileType","getFolderItems","graph","subj","files","folders","each","rdflib","forEach","item","newItem","url","folderNode","isAnInstanceOfClass","types","index","getFileType","stats","subjectName","subjectNode","mod","size","mtime","modified","any","getStats","label","decodeURIComponent","replace","push","text2graph","_x","_x2","_x3","_text2graph","apply","this","_callee","text","contentType","regenerator_default","wrap","_context","prev","next","abrupt","Promise","reject","guessFileType","err","stop","ext","fetchFile","_fetchFile","fileName","_args","buildFileUrl","solidAuth","assertSuccessfulResponse","fetchFolder","_fetchFolder","_callee2","folderName","_args2","_context2","buildFolderUrl","readFolder","_readFolder","_callee3","response","folderRDF","folderItems","_args3","_context3","sent","folderUtils","_callee4","destination","itemNames","_context4","copyItems","removeItems","_callee5","oldName","newName","_context5","copyFile","removeItem","_callee6","oldFolderName","newFolderName","_context6","copyFolder","removeFolderRecursively","_x13","_x14","_x15","_copyItems","_callee7","_ref","promises","_context7","_ref2","includes","_ref3","_ref4","_ref5","all","Response","_x16","_x17","_x18","_x19","_copyFile","_callee8","originPath","originName","destinationPath","destinationName","destinationUrl","fileResponse","content","_context8","headers","get","t0","blob","method","body","_x20","_x21","_x22","_x23","_copyFolder","_callee9","_ref6","_context9","createFolder","_ref7","_ref8","_callee10","_context10","Array","from","file","updateItem","_x26","_x27","_createFolder","_callee11","_context11","folderExists","createItem","_x28","_x29","_x30","_x31","_updateItem","_callee12","itemName","_context12","_callee13","baseUrl","request","_context13","link","slug","Content-Type","_x36","_x37","_removeItems","_callee14","_context14","_x38","_x39","_removeItem","_callee15","_context15","status","_x40","_x41","_removeFolderRecursively","_callee16","_context16","removeFolderContents","_x42","_x43","_removeFolderContents","_callee17","folderPath","_ref9","_context17","_ref10","_ref11","_x44","_x45","_folderExists","_callee18","_context18","ok","logFetchError","asyncToGenerator","mark","errorMessage","group","message","stack","JSON","stringify","groupEnd","fixPath","getItemList","API","getFileBlob","filename","renameFile","newFileName","_x7","_x8","_x9","_renameFile","renameFolder","_x10","_x11","_x12","_renameFolder","folder","trim","moveItems","filenames","_x4","_x5","_x6","_moveItems","uploadFiles","_x24","_x25","_upload","updateFile","getAsZip","itemList","zip","JSZip","addItemsToZip","zipFolder","binary","extractZipArchive","uploadExtractedZipArchive","curFolder","_args5","getItemsInZipFolder","relativePath","getItemNameFromPath","getParentPathFromPath","dir","async","key","getActionsByMultipleFiles","acts","fileActs","compressible","test","editable","extractable","getActionsByFile","removeAction","splice","getHumanFileSize","bytes","Math","pow","toFixed","endsWith","substr","lastIndexOf","solidLogin","dispatch","getState","setLoading","solidPopupLogin","setWebId","setIsLoggedIn","r","toString","session","popupUri","refreshFileList","setSelectedFiles","APIHandler","join","setFileList","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","promptDownload","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","getFileContent","setFileContent","setVisibleDialogEdit","_getState16","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState17","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","setPath","enterToDirectory","directory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogSolidLogin","setVisibleDialogSolidLogout","setVisibleDialogCreateFolder","setVisibleDialogCreateFile","setVisibleDialogRename","setVisibleDialogMove","setVisibleDialogContent","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","Folder_default","InsertDriveFile_default","ListItemText_default","primary","decodeURI","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","fileListComponent","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","toLocaleLowerCase","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","Clear_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_CreateFileAction","ContextMenuActions_UploadFileAction","ContextMenuActions_SolidLogoutAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","newPath","enterToPreviousDirectoryByIndex","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","archiveName","generateAsync","Archive_default","Unarchive_default","_getState8","downloadName","CloudDownload_default","Link_default","ContextMenu","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","ContextMenuActions_OpenAction","ContextMenuActions_OpenInNewTabAction","ContextMenuActions_DownloadAction","ContextMenuActions_ZipAction","ContextMenuActions_ExtractAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_RemoveAction","FormDialog","storageLocation","origin","form","querySelector","handleSubmit","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","bind","DialogActions_default","handleLogout","lastBlobUrl","blobUrl","src","alt","handleOpen","_this2","fetch","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","updateTextFile","createFolderName","handleCreate","encodeURI","createFile","realName","FileSublist","FileListSublist","File_FileSublist_FileSublist","selectedPath","canMove","FileList_FileListSublist_FileListSublist","disabled","_getState15","canCopy","UploadFileList","list","dense","List_default","component","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","SolidLogout","Content","Edit","CreateFolder","CreateFile","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d2ac8e15.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 112,\n\t\"./N3Lexer.js\": 112,\n\t\"./N3Parser\": 113,\n\t\"./N3Parser.js\": 113,\n\t\"./N3Store\": 148,\n\t\"./N3Store.js\": 148,\n\t\"./N3StreamParser\": 149,\n\t\"./N3StreamParser.js\": 149,\n\t\"./N3StreamWriter\": 157,\n\t\"./N3StreamWriter.js\": 157,\n\t\"./N3Util\": 114,\n\t\"./N3Util.js\": 114,\n\t\"./N3Writer\": 119,\n\t\"./N3Writer.js\": 119\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 254;","export const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    isLoggedIn: false,\n    webId: null,\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: true,\n    visibleDialogSolidLogout: false,\n    visibleDialogCreateFolder: false,\n    visibleDialogCreateFile: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'SET_IS_LOGGED_IN':\n            return Object.assign({}, state, {\n                isLoggedIn: action.value\n            });\n        case 'SET_WEB_ID':\n            return Object.assign({}, state, {\n                webId: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGOUT':\n            return Object.assign({}, state, { \n                visibleDialogSolidLogout: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FILE':\n            return Object.assign({}, state, { \n                visibleDialogCreateFile: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let host = null;\n\nexport default {\n    getHost() {\n        return host;\n    },\n    setHost(newHost) {\n        host = newHost;\n        while (host.slice(-1) === '/')\n            host = host.slice(0, -1);\n    },\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\n\nconst folderType = 'dir';\nconst fileType = 'file';\n\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function getFileType(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return folderType;\n        else\n            return fileType;\n    }\n    return 'unknown';\n}\nexport function getFolderItems(graph, subj) {\n    const files = [];\n    const folders = [];\n    graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).forEach(item => {\n        let newItem = {}\n        newItem.type = getFileType(graph, item.value)\n        const stats = getStats(graph, item.value)\n        newItem.modified = stats.modified\n        newItem.size = stats.size\n        newItem.mtime = stats.mtime\n        newItem.label = decodeURIComponent(item.value).replace(/.*\\//, '')\n\n        if (newItem.type === folderType) {\n            item.value = item.value.replace(/[/]+/g, '/');\n            item.value = item.value.replace(/https:/, 'https:/');\n            const name = item.value.replace(/\\/$/, '')\n            newItem.name = name.replace(/.*\\//, '')\n            newItem.url = item.value\n\n            folders.push(newItem);\n        }\n        else {\n            newItem.url = item.value\n            newItem.name = item.value.replace(/.*\\//, '')\n\n            files.push(newItem);\n        }\n    });\n\n    return { files, folders };\n}\n\n/**\n * @param {string} text RDF text that can be passed to $rdf.parse()\n * @param {*} content the request body\n * @param {string} contentType Content-Type of the request\n * @returns {$rdf.IndexedFormula} a $rdf.graph() database instance with parsed RDF\n */\nexport async function text2graph(text, url, contentType) {\n    return new Promise((resolve, reject) => {\n        contentType = contentType || guessFileType(url)\n        var graph = rdflib.graph();\n        try {\n            rdflib.parse(text, graph, url, contentType);\n            resolve(graph);\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\n/*cjs*/ function guessFileType(url) {\n    const ext = url.replace(/.*\\./, '');\n    if (ext.match(/\\/$/)) return folderType;\n    if (ext.match(/(md|markdown)/)) return 'text/markdown';\n    if (ext.match(/html/)) return 'text/html';\n    if (ext.match(/xml/)) return 'text/xml';\n    if (ext.match(/ttl/)) return 'text/turtle';\n    if (ext.match(/n3/)) return 'text/n3';\n    if (ext.match(/rq/)) return 'application/sparql';\n    if (ext.match(/css/)) return 'text/css';\n    if (ext.match(/txt/)) return 'text/plain';\n    if (ext.match(/json/)) return 'application/json';\n    if (ext.match(/js/)) return 'application/javascript';\n    if (ext.match(/(png|gif|jpeg|tif)/)) return 'image';\n    if (ext.match(/(mp3|aif|ogg)/)) return 'audio';\n    if (ext.match(/(avi|mp4|mpeg)/)) return 'video';\n    /* default */ return 'text/turtle';\n}","import config from './../config.js';\nimport * as folderUtils from './folderUtils.js';\nimport * as solidAuth from 'solid-auth-client';\n\n/**\n * @typedef {Object} FolderItems\n * @property {Array<{Object}>} files\n * @property {Array<{Object}>} folders\n */\n\n\n/**\n * Fetch API to get item\n * @param {String} path\n * @param {String} fileName\n * @returns {Response}\n */\nexport async function fetchFile(path, fileName = '') {\n    const url = buildFileUrl(path, fileName);\n    return solidAuth.fetch(url)\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to get folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function fetchFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n    return solidAuth.fetch(url)\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to retrieve object containing a files and folders array\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<FolderItems>}\n */\nexport async function readFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n\n    const response = await fetchFolder(path, folderName);\n    const folderRDF = await response.text();\n    const graph = await folderUtils.text2graph(folderRDF, url, 'text/turtle');\n    const folderItems = folderUtils.getFolderItems(graph, url);\n\n    return folderItems;\n}\n\n\n/**\n * Fetch API to move items\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} itemNames\n * @returns {Response}\n */\nexport async function moveItems(path, destination, itemNames) {\n    await copyItems(path, destination, itemNames);\n    return removeItems(path, itemNames);\n};\n\n\n/**\n * Fetch API to rename a file\n * @param {String} path\n * @param {String} oldName\n * @param {String} newName\n * @returns {Response}\n */\nexport async function renameFile(path, oldName, newName) {\n    await copyFile(path, oldName, path, newName);\n    return removeItem(path, oldName);\n};\n\n\n/**\n * Fetch API to rename a folder\n * @param {String} path\n * @param {String} oldFolderName\n * @param {String} newFolderName\n * @returns {Response}\n */\nexport async function renameFolder(path, oldFolderName, newFolderName) {\n    await copyFolder(path, oldFolderName, path, newFolderName);\n    return removeFolderRecursively(path, oldFolderName);\n};\n\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {String} destination\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function copyItems(path, destination, itemNames) {\n    let { files, folders } = await readFolder(path);\n\n    files = files.filter(({ name }) => itemNames.includes(name));\n    folders = folders.filter(({ name }) => itemNames.includes(name));\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to copy a file\n * @param {String} originPath\n * @param {String} originName\n * @param {String} destinationPath\n * @param {String} destinationName\n * @returns {Response}\n */\nexport async function copyFile(originPath, originName, destinationPath, destinationName) {\n    const destinationUrl = buildFileUrl(destinationPath, destinationName);\n\n    const fileResponse = await fetchFile(originPath, originName);\n    const content = (fileResponse.headers.get('Content-Type') === 'application/json') ?\n        await fileResponse.text()\n        : await fileResponse.blob();\n\n    return solidAuth.fetch(destinationUrl, {\n        method: 'PUT',\n        body: content\n    }).then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to copy a folder recursively\n * @param {String} originPath \n * @param {String} originName \n * @param {String} destinationPath \n * @param {String} destinationName \n * @return {Response}\n */\nexport async function copyFolder(originPath, originName, destinationPath, destinationName) {\n    // TODO: Combine these two promises for better performance\n    await createFolder(destinationPath, destinationName);\n    const { files, folders } = await readFolder(originPath, originName);\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to upload files\n * @param {String} path\n * @param {FileList} fileList\n * @returns {Response}\n */\nexport async function upload(path, fileList) {\n    const promises = Array.from(fileList).map(file => updateItem(path, file.name, file));\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to create a folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function createFolder(path, folderName) {\n    if (await folderExists(path, folderName))\n        return new Response();\n\n    return createItem(path, folderName, '', 'dir');\n}\n\n\n/**\n * Fetch API to create update or create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nexport async function updateItem(path, itemName, content, contentType) {\n    await removeItem(path, itemName);\n    return createItem(path, itemName, content, contentType);\n}\n\n\n/**\n * Fetch API to create create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nasync function createItem(path, itemName, content, contentType) {\n    const baseUrl = `${config.getHost()}${path}`;\n    const link = (contentType === 'dir') ?\n        '<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\n        : '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"';\n\n    const request = {\n        method: 'POST',\n        headers: {\n            link,\n            slug: itemName,\n            'Content-Type': contentType\n        },\n        body: content\n    };\n\n    return solidAuth.fetch(baseUrl, request)\n        .then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to remove multiple items\n * @param {String} path\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function removeItems(path, itemNames) {\n    await Promise.all(itemNames.map(itemName => removeItem(path, itemName)));\n    return new Response();\n};\n\n\n/**\n * Fetch API to remove one item\n * @param {String} path \n * @param {String} itemName \n * @returns {Response}\n */\nexport async function removeItem(path, itemName) {\n    const url = buildFileUrl(path, itemName);\n\n    const response = await solidAuth.fetch(url, { method: 'DELETE' });\n    if (response.status === 409 || response.status === 301) {\n        // Solid pod returns 409 if the item is a folder and is not empty\n        // Solid pod returns 301 if is attempted to read a folder url without '/' at the end (from buildFileUrl)\n        return removeFolderRecursively(path, itemName);\n    }\n    else if (response.status === 404) {\n        // Don't throw if the item didn't exist\n        return response;\n    }\n    else {\n        assertSuccessfulResponse(response);\n        return response;\n    }\n}\n\n\n/**\n * Fetch API to remove contents and folder itself recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderRecursively(path, folderName) {\n    await removeFolderContents(path, folderName);\n    return removeItem(path, folderName);\n}\n\n\n/**\n * Fetch API to remove contents of one folder recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderContents(path, folderName) {\n    const folderPath = `${path}/${folderName}`;\n\n    const { files, folders } = await readFolder(path, folderName);\n    const promises = [\n        ...files.map(({ name }) => removeItem(folderPath, name)),\n        ...folders.map(({ name }) => removeFolderRecursively(folderPath, name))\n    ];\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to check if a folder exists\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<Boolean>}\n */\nexport async function folderExists(path, folderName) {\n    try {\n        await fetchFolder(path, folderName);\n        return true;\n    }\n    catch (error) {\n        if (error instanceof Response && error.status === 404)\n            return false;\n\n        throw error;\n    }\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a folder name\n * @param {String} path\n * @param {String} folderName\n * @return {String}\n */\nfunction buildFolderUrl(path, folderName = '') {\n    return buildFileUrl(path, folderName) + '/';\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a fileName\n * @param {String} path \n * @param {Sting} fileName \n * @return {String}\n */\nfunction buildFileUrl(path, fileName = '') {\n    let url = `${config.getHost()}${path}/${fileName}`;\n    while (url.slice(-1) === '/')\n        url = url.slice(0, -1);\n\n    return url;\n}\n\n\n/**\n * Throw response if fetch response was unsuccessful\n * @param {Response} response\n * @returns {Response}\n */\nconst assertSuccessfulResponse = (response) => {\n    if (!response.ok)\n        throw response;\n    return response;\n};","import * as API from './Api.js';\nimport config from './../config.js';\nimport * as JSZip from 'jszip';\n\n\n/**\n * Log a fetch response error and throw it again\n * @param {*} error \n */\nconst logFetchError = async (error) => {\n    let errorMessage = '';\n\n    console.group('handleFetchError');\n    if (error instanceof Response) {\n        errorMessage = await error.text();\n\n        console.error(`url: ${error.url}`);\n        console.error(`status: ${error.status}`);\n    }\n    else if (error instanceof Error) {\n        errorMessage = error.message;\n        console.error(error.stack);\n    }\n    else if (typeof error === 'string') {\n        errorMessage = error;\n    }\n    else {\n        errorMessage = JSON.stringify(error);\n    }\n    console.error(`errorMessage: ${errorMessage}`);\n    console.error(`error: ${error}`);\n    console.groupEnd();\n\n    throw new Error(errorMessage);\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrieving item list\n * @param {String} path\n * @returns {Promise<API.FolderItems>}\n */\nexport const getItemList = (path) => {\n    path = fixPath(path);\n    return API.readFolder(path)\n        .then(({ files, folders }) => [...files, ...folders])\n        .catch(logFetchError);\n};\n\n/**\n * Wrap API response for retrieving file content\n * @param {String} path\n * @param {String} filename\n * @returns {Promise<Blob>}\n */\nexport const getFileBlob = (path, filename) => {\n    path = fixPath(path);\n    return API.fetchFile(path, filename)\n        .then(response => response.blob())\n        .catch(logFetchError);\n};\n\n\n/**\n * Wrap API response for renaming a file\n * @param {String} path\n * @param {String} fileName\n * @param {String} newFileName\n * @returns {Promise<Response>}\n */\nexport const renameFile = (path, fileName, newFileName) => {\n    path = fixPath(path);\n    return API.renameFile(path, fileName, newFileName)\n        .catch(logFetchError)\n};\n\n\n/**\n * Wrap API response for renaming a folder\n * @param {String} path\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Promise<Response>}\n */\nexport const renameFolder = (path, folderName, newFolderName) => {\n    path = fixPath(path);\n    return API.renameFolder(path, folderName, newFolderName)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for creating a folder\n * @param {String} path\n * @param {String} folder\n * @returns {Promise<Response>}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createFolder(path, folder)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for removing a file or folder\n * @param {String} path\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.removeItems(path, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for moving a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.moveItems(path, destination, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for copying a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copyItems(path, destination, filenames)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for uploading files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Promise<Response>}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .catch(logFetchError)\n};\n\n/**\n * Wrap API response for uploading a file\n * @param {String} path\n * @param {String} fileName\n * @param {Blob} content\n * @returns {Promise<Response>}\n */\nexport const updateFile = (path, fileName, content) => {\n    path = fixPath(path);\n    return API.updateItem(path, fileName, content)\n        .catch(logFetchError);\n};\n\n/**\n * Wrap API response for zipping multiple items\n * @param {String} path\n * @param {Array<API.FolderItems>} itemList\n * @returns {Promise<Object>}\n */\nexport const getAsZip = (path, itemList) => {\n    path = fixPath(path);\n    const zip = new JSZip();\n\n    return addItemsToZip(zip, path, itemList)\n        .then(() => zip);\n}\n\n/**\n * Add items to a zip object recursively\n * @param {Object} zip\n * @param {String} path\n * @param {Array<API.FolderItems>} itemList\n * @returns {Promise<Object>}\n */\nconst addItemsToZip = (zip, path, itemList) => {\n    const promises = itemList.map(async item => {\n        if (item.type === 'dir') {\n            const zipFolder = zip.folder(item.name);\n            const folderPath = `${path}/${item.name}`;\n            const folderItems = await getItemList(folderPath);\n            return addItemsToZip(zipFolder, folderPath, folderItems);\n        }\n        else if (item.type === 'file') {\n            const blob = await getFileBlob(path, item.name);\n            return zip.file(item.name, blob, { binary: true });\n        }\n    });\n\n    return Promise.all(promises);\n}\n\n/**\n * Wrap API response for extracting a zip archive\n * @param {String} path\n * @param {String} destination\n * @param {String} fileName\n */\nexport const extractZipArchive = async (path, destination = path, fileName) => {\n    const blob = await getFileBlob(path, fileName);\n    const zip = await JSZip.loadAsync(blob);\n\n    return uploadExtractedZipArchive(zip, destination);\n};\n\n/**\n * Recursively upload all files and folders from an extracted zip archive\n * @param {Object} zip \n * @param {String} destination \n * @param {String} curFolder \n */\nasync function uploadExtractedZipArchive(zip, destination, curFolder = '') {\n    const promises = getItemsInZipFolder(zip, curFolder)\n        .map(async item => {\n            const relativePath = item.name;\n            const itemName = getItemNameFromPath(relativePath);\n            const path = getParentPathFromPath(`${destination}/${relativePath}`);\n\n            if (item.dir) {\n                await createFolder(path, itemName);\n                return uploadExtractedZipArchive(zip, destination, relativePath);\n            }\n            else {\n                const blob = await item.async('blob');\n                return updateFile(path, itemName, blob);\n            }\n        });\n\n    return Promise.all(promises);\n};\n\nfunction getItemsInZipFolder(zip, folderPath) {\n    return Object.keys(zip.files)\n        .filter(fileName => {\n            // Only items in the current folder and subfolders\n            const relativePath = fileName.slice(folderPath.length, fileName.length);\n            if (!relativePath || fileName.slice(0, folderPath.length) !== folderPath)\n                return false;\n            \n            // No items from subfolders\n            if (relativePath.includes('/') && relativePath.slice(0, -1).includes('/'))\n                return false;\n            \n            console.log(`found in folder: ${fileName}`);\n            return true;\n        })\n        .map(key => zip.files[key]);\n};\n\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress') :\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit') :\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n\n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract') :\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n    }\n\n    acts.push('openInNewTab');\n    acts.push('download');\n    acts.push('copy');\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, only leaving common actions\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only common actions\n        acts = acts.length ?\n            acts.filter(value => -1 !== fileActs.indexOf(value)) \n            : fileActs;\n    });\n\n    if (files.length > 1) {\n        const removeAction = name => acts.splice(acts.indexOf(name), acts.indexOf(name) > -1);\n        const addAction = name => acts.includes(name) || acts.push(name);\n        removeAction('open');\n        removeAction('openInNewTab');\n        removeAction('edit');\n        removeAction('rename');\n\n        addAction('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};\n\n\nfunction getItemNameFromPath(path) {\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    return path.substr(path.lastIndexOf('/') + 1);\n}\n\nfunction getParentPathFromPath(path) {\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    path = path.substr(0, path.lastIndexOf('/'));\n    return path;\n}","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport config from '../config.js';\n\n\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        dispatch(setWebId(webId));\n        dispatch(setIsLoggedIn(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return (session.webId);\n}\n\n\nexport const solidLogout = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidAuth.logout().then(() => {\n        dispatch(setPath([]));\n        dispatch(setPathSublist([]));\n        dispatch(setFileList([]));\n        dispatch(setSelectedFiles([]));\n        dispatch(setIsLoggedIn(false));\n        dispatch(setWebId(''));\n        dispatch(setVisibleDialogSolidLogout(false));\n        dispatch(setVisibleDialogSolidLogin(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\nexport const createFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateFile(path.join('/'), fileName, '').then(r => {\n        dispatch(setVisibleDialogCreateFile(false));\n        dispatch(refreshFileList());\n\n        APIHandler.getItemList(path.join('/')).then(itemList => {\n            const file = itemList.find(item => item.name === fileName || item.name === encodeURI(fileName));\n            dispatch(setSelectedFiles([file]));\n            dispatch(getFileContent(file.name));\n            dispatch(setVisibleDialogEdit(true));\n        });\n    });\n};\n\n\nexport const updateTextFile = (fileName, content) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateFile(path.join('/'), fileName, content).then(r => {\n        dispatch(setVisibleDialogEdit(false));\n        dispatch(refreshFileList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n}\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    APIHandler.getItemList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getItemList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameFile = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFile(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Function}\n */\nexport const renameFolder = (folderName, newFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to download the specified items\n * @param {Array<Object>} itemList\n * @returns {Function}\n */\nexport const downloadItems = (itemList) => async (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    try {\n        let blob;\n        let downloadName = `${itemList[0].name}.zip`;\n        if (itemList.length === 1 && itemList[0].type === 'file') {\n            blob = await APIHandler.getFileBlob(path.join('/'), itemList[0].name);\n        }\n        else {\n            const zip = await APIHandler.getAsZip(path.join('/'), itemList);\n            blob = await zip.generateAsync({ type: 'blob' });\n\n            if (itemList.length > 1)\n                downloadName = 'Archive.zip';\n        }\n\n        promptDownload(blob, downloadName);\n        dispatch(setLoading(false));\n    }\n    catch (e) {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: e.toString()\n        });\n        dispatch(setLoading(false));\n    }\n};\n\n/**\n * Request API to upload the items as zip archive\n * @param {Array<Object>} itemList\n * @returns {Function}\n */\nexport const zipAndUpload = (itemList) => (dispatch, getState) => {\n    const { path } = getState();\n    const archiveName = (itemList.length === 1 && itemList[0].type === 'dir') ? `${itemList[0].name}.zip` : 'Archive.zip';\n\n    dispatch(setLoading(true));\n    APIHandler.getAsZip(path.join('/'), itemList)\n        .then(zip => zip.generateAsync({ type: 'blob' }))\n        .then(blob => APIHandler.updateFile(path.join('/'), archiveName, blob))\n        .then(() => {\n            dispatch(setLoading(false));\n            dispatch(refreshFileList());\n        })\n        .catch(r => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: r.toString()\n            });\n            dispatch(setLoading(false));\n        });\n};\n\n/**\n * Request API for extracting a zip archive\n * @param {String} fileName\n * @returns {Function}\n */\nexport const extractZipFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    APIHandler.extractZipArchive(path.join('/'), path.join('/'), fileName).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n// code from https://stackoverflow.com/a/30832210/6548154\nfunction promptDownload(file, fileName) {\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, fileName);\n    else { // Others\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }, 0);\n    }\n}\n\n\nexport const openInNewTab = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    const url = `${config.getHost()}/${path.length ? (path.join('/') + '/') : ''}${fileName}`;\n    window.open(url, '_blank');\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));\n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n    return {\n        type: 'SET_IS_LOGGED_IN',\n        value: isLoggedIn\n    };\n};\n\nexport const setWebId = (webId) => {\n    return {\n        type: 'SET_WEB_ID',\n        value: webId\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogSolidLogout = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGOUT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n    return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n    return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n    return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={decodeURI(name)} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContent(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nfunction CreateFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <InsertDriveFileIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create file\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nfunction SolidLogoutAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <ClearIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Logout\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogout(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLogoutAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport CreateFileAction from '../ContextMenu/ContextMenuActions/CreateFileAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\nimport SolidLogoutAction from '../ContextMenu/ContextMenuActions/SolidLogoutAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <CreateFileAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n          <SolidLogoutAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { zipAndUpload } from '../../../Actions/Actions.js';\n\nfunction ZipAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <ArchiveIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Zip here\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(zipAndUpload(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZipAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport { extractZipFile } from '../../../Actions/Actions.js';\n\nfunction ExtractAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <UnarchiveIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Extract here\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(extractZipFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtractAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                {(selectedFiles.length === 1 && selectedFiles[0].type === 'file') ? \n                    'Download'\n                    : 'Download Zip'\n                }\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { openInNewTab } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction OpenInNewTabAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <LinkIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open in new Tab\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(openInNewTab(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport ZipAction from './ContextMenuActions/ZipAction.jsx';\nimport ExtractAction from './ContextMenuActions/ExtractAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\nimport OpenInNewTabAction from './ContextMenuActions/OpenInNewTabAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n\n        return (\n            <div>\n                <Menu\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible}\n                    onClose={() => { }}\n                    PaperProps={{ style: { width: 190 } }}>\n                    {acts.includes('open') && <OpenAction />}\n                    {acts.includes('openInNewTab') && <OpenInNewTabAction />}\n                    {acts.includes('download') && <DownloadAction />}\n                    {acts.includes('compress') && <ZipAction />}\n                    {acts.includes('extract') && <ExtractAction />}\n                    {acts.includes('edit') && <EditAction />}\n                    {acts.includes('copy') && <CopyAction />}\n                    {acts.includes('move') && <MoveAction />}\n                    {acts.includes('rename') && <RenameAction />}\n                    {acts.includes('remove') && <RemoveAction />}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin, refreshFileList } from '../../../Actions/Actions.js';\nimport config from '../../../config.js';\n\nclass FormDialog extends Component {\n    state = {\n      storageLocation: null,\n    };\n\n    componentWillReceiveProps(props) {\n      const { isLoggedIn, webId } = props;\n      if (isLoggedIn) {\n        const storageLocation = (new URL(webId)).origin;\n        this.setState({ storageLocation });\n      }\n    }\n\n    handleChange (event) {\n      const storageLocation = event.currentTarget.form.querySelector('input').value;\n      this.setState({ storageLocation });\n    }\n\n    handleSubmit (event) {\n        this.props.handleSubmit(event)(this.state.storageLocation);\n    }\n\n    render() {\n        let { storageLocation } = this.state;\n        const { handleClose, handleLogin, open, isLoggedIn } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                    {\n                      isLoggedIn && (\n                        <div>\n                          <p>Please enter your pods storage location</p>\n                          <TextField autoFocus fullWidth margin=\"dense\" label=\"Storage Location\" type=\"text\" onChange={this.handleChange.bind(this)} value={storageLocation} />\n                        </div>\n                      )\n                    }\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)}>\n                      Enter your Pod\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogin,\n        webId: state.webId,\n        isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        },\n        handleSubmit: event => (storageLocation) => {\n            event.preventDefault();\n            config.setHost(storageLocation);\n            dispatch(setVisibleDialogSolidLogin(false));\n            dispatch(refreshFileList());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogout, setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogout, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-logout\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-logout\">Logout from your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please confirm logging out by clicking the Logout button below</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogout}>\n                      Logout\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogout\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogout(false));\n        },\n        handleLogout: event => {\n            event.preventDefault();\n            dispatch(solidLogout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit, updateTextFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    handleSave (event) {\n        event.preventDefault();\n        const content = event.currentTarget.form.querySelector('textarea').value;\n\n        this.props.handleSave(event)(this.props.fileName, content);\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n            <div>\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      {this.state.loading ? 'Loading...' : textArea}\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Close\n                    </Button>\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\n                      Update\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        fileName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => (fileName, content) => {\n            dispatch(updateTextFile(fileName, content));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createFile, setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleCreate, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-file\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-file\">Create file</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"File name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleCreate}>\n                      Create\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFile\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFile(false));\n        },\n        handleCreate: event => {\n            event.preventDefault();\n            const fileName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createFile(fileName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameFile, renameFolder, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value, this.props.type);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : '',\n        type: state.selectedFiles.length ? state.selectedFiles[0].type : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName, type) => {\n            event.preventDefault();\n            if (type === 'dir')\n                dispatch(renameFolder(realName, newName));\n            else\n               dispatch(renameFile(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                // TODO: Change this to display none as soon, as the label button works\n                // display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>*/}\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolidLogin from './SolidLogin/SolidLogin.jsx';\nimport DialogSolidLogout from './SolidLogout/SolidLogout.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogCreateFile from './CreateFile/CreateFile.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolidLogin />\n            <DialogSolidLogout />\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogCreateFile />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            // dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}